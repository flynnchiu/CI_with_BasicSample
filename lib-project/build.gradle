/*
 * Copyright 2015, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply from: "${project.rootDir}/publish2maven.gradle"

android {
    compileSdkVersion 21
    buildToolsVersion '22.0.1'
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
    }
    buildTypes {
        debug {
            versionNameSuffix "Debug"
            debuggable true
            testCoverageEnabled = true
        }
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    jacoco {
        version "0.7.1.201405082137"
    }
}

dependencies {

    compile 'com.google.android.gms:play-services:7.5.0'
    //compile 'com.google.android.gms:play-services-base:7.5.0'
    // Unit testing dependencies.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

def coverageSourceDirs = [
    'src/main/java'
]

task generateJacocoTestReports(type:JacocoReport, dependsOn: "test") {
    group = "Reporting"
    reports {
        xml.enabled = true
        html.enabled = true
    }
    description = "Generate Jacoco Robolectric unit test coverage reports"
 
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
}